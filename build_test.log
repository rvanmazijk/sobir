==> devtools::test()ℹ Testing sobir✔ | F W S  OK | Context✔ |         1 | extract_bpts                                                ✔ |         1 | bpts_plot                                                   ✔ |   2     2 | calc_area                                                   ────────────────────────────────────────────────────────────────────────────Warning (tests.R:29): calc_area should return a list of the three no-data zone areas unsing two vectorscollapsing to unique 'x' valuesBacktrace: 1. sobir::calc_area(a, b)      at tests.R:29:2 2. DescTools::AUC(topr_crnr$x, topr_crnr$y, absolutearea = TRUE)      at sobir/R/calc_area.R:128:2 3. stats::approx(...) 4. stats:::regularize.values(x, y, ties, missing(ties), na.rm = na.rm)Warning (tests.R:29): calc_area should return a list of the three no-data zone areas unsing two vectorscollapsing to unique 'x' valuesBacktrace: 1. sobir::calc_area(a, b)      at tests.R:29:2 2. DescTools::AUC(topl_crnr$x, topl_crnr$y, absolutearea = TRUE)      at sobir/R/calc_area.R:138:2 3. stats::approx(...) 4. stats:::regularize.values(x, y, ties, missing(ties), na.rm = na.rm)────────────────────────────────────────────────────────────────────────────✖ | 1 9     0 | perm_area [0.3s]                                            ────────────────────────────────────────────────────────────────────────────Warning (tests.R:40): perm_area should calculate the no-data zone areas for each permutation of the data simulated nsim timescollapsing to unique 'x' valuesBacktrace: 1. sobir::perm_area(a, b, 5, boundary = "topl")      at tests.R:40:2 2. base::sapply(...)      at sobir/R/perm_area.R:74:2 3. base::lapply(X = X, FUN = FUN, ...) 4. sobir (local) FUN(X[[i]], ...) 5. sobir::calc_area(sim_x, sim_y)      at sobir/R/perm_area.R:83:4 6. DescTools::AUC(topr_crnr$x, topr_crnr$y, absolutearea = TRUE)      at sobir/R/calc_area.R:128:2 7. stats::approx(...) 8. stats:::regularize.values(x, y, ties, missing(ties), na.rm = na.rm)Warning (tests.R:40): perm_area should calculate the no-data zone areas for each permutation of the data simulated nsim timescollapsing to unique 'x' valuesBacktrace: 1. sobir::perm_area(a, b, 5, boundary = "topl")      at tests.R:40:2 2. base::sapply(...)      at sobir/R/perm_area.R:74:2 3. base::lapply(X = X, FUN = FUN, ...) 4. sobir (local) FUN(X[[i]], ...) 5. sobir::calc_area(sim_x, sim_y)      at sobir/R/perm_area.R:83:4 6. DescTools::AUC(topl_crnr$x, topl_crnr$y, absolutearea = TRUE)      at sobir/R/calc_area.R:138:2 7. stats::approx(...) 8. stats:::regularize.values(x, y, ties, missing(ties), na.rm = na.rm)Warning (tests.R:40): perm_area should calculate the no-data zone areas for each permutation of the data simulated nsim timescollapsing to unique 'x' valuesBacktrace: 1. sobir::perm_area(a, b, 5, boundary = "topl")      at tests.R:40:2 2. base::sapply(...)      at sobir/R/perm_area.R:74:2 3. base::lapply(X = X, FUN = FUN, ...) 4. sobir (local) FUN(X[[i]], ...) 5. sobir::calc_area(sim_x, sim_y)      at sobir/R/perm_area.R:83:4 6. DescTools::AUC(topr_crnr$x, topr_crnr$y, absolutearea = TRUE)      at sobir/R/calc_area.R:128:2 7. stats::approx(...) 8. stats:::regularize.values(x, y, ties, missing(ties), na.rm = na.rm)Warning (tests.R:40): perm_area should calculate the no-data zone areas for each permutation of the data simulated nsim timescollapsing to unique 'x' valuesBacktrace: 1. sobir::perm_area(a, b, 5, boundary = "topl")      at tests.R:40:2 2. base::sapply(...)      at sobir/R/perm_area.R:74:2 3. base::lapply(X = X, FUN = FUN, ...) 4. sobir (local) FUN(X[[i]], ...) 5. sobir::calc_area(sim_x, sim_y)      at sobir/R/perm_area.R:83:4 6. DescTools::AUC(topr_crnr$x, topr_crnr$y, absolutearea = TRUE)      at sobir/R/calc_area.R:128:2 7. stats::approx(...) 8. stats:::regularize.values(x, y, ties, missing(ties), na.rm = na.rm)Warning (tests.R:40): perm_area should calculate the no-data zone areas for each permutation of the data simulated nsim timescollapsing to unique 'x' valuesBacktrace: 1. sobir::perm_area(a, b, 5, boundary = "topl")      at tests.R:40:2 2. base::sapply(...)      at sobir/R/perm_area.R:74:2 3. base::lapply(X = X, FUN = FUN, ...) 4. sobir (local) FUN(X[[i]], ...) 5. sobir::calc_area(sim_x, sim_y)      at sobir/R/perm_area.R:83:4 6. DescTools::AUC(topl_crnr$x, topl_crnr$y, absolutearea = TRUE)      at sobir/R/calc_area.R:138:2 7. stats::approx(...) 8. stats:::regularize.values(x, y, ties, missing(ties), na.rm = na.rm)Warning (tests.R:40): perm_area should calculate the no-data zone areas for each permutation of the data simulated nsim timescollapsing to unique 'x' valuesBacktrace: 1. sobir::perm_area(a, b, 5, boundary = "topl")      at tests.R:40:2 2. base::sapply(...)      at sobir/R/perm_area.R:74:2 3. base::lapply(X = X, FUN = FUN, ...) 4. sobir (local) FUN(X[[i]], ...) 5. sobir::calc_area(sim_x, sim_y)      at sobir/R/perm_area.R:83:4 6. DescTools::AUC(topr_crnr$x, topr_crnr$y, absolutearea = TRUE)      at sobir/R/calc_area.R:128:2 7. stats::approx(...) 8. stats:::regularize.values(x, y, ties, missing(ties), na.rm = na.rm)Warning (tests.R:40): perm_area should calculate the no-data zone areas for each permutation of the data simulated nsim timescollapsing to unique 'x' valuesBacktrace: 1. sobir::perm_area(a, b, 5, boundary = "topl")      at tests.R:40:2 2. base::sapply(...)      at sobir/R/perm_area.R:74:2 3. base::lapply(X = X, FUN = FUN, ...) 4. sobir (local) FUN(X[[i]], ...) 5. sobir::calc_area(sim_x, sim_y)      at sobir/R/perm_area.R:83:4 6. DescTools::AUC(topl_crnr$x, topl_crnr$y, absolutearea = TRUE)      at sobir/R/calc_area.R:138:2 7. stats::approx(...) 8. stats:::regularize.values(x, y, ties, missing(ties), na.rm = na.rm)Warning (tests.R:40): perm_area should calculate the no-data zone areas for each permutation of the data simulated nsim timescollapsing to unique 'x' valuesBacktrace: 1. sobir::perm_area(a, b, 5, boundary = "topl")      at tests.R:40:2 2. base::sapply(...)      at sobir/R/perm_area.R:74:2 3. base::lapply(X = X, FUN = FUN, ...) 4. sobir (local) FUN(X[[i]], ...) 5. sobir::calc_area(sim_x, sim_y)      at sobir/R/perm_area.R:83:4 6. DescTools::AUC(topr_crnr$x, topr_crnr$y, absolutearea = TRUE)      at sobir/R/calc_area.R:128:2 7. stats::approx(...) 8. stats:::regularize.values(x, y, ties, missing(ties), na.rm = na.rm)Warning (tests.R:40): perm_area should calculate the no-data zone areas for each permutation of the data simulated nsim timescollapsing to unique 'x' valuesBacktrace: 1. sobir::perm_area(a, b, 5, boundary = "topl")      at tests.R:40:2 2. base::sapply(...)      at sobir/R/perm_area.R:74:2 3. base::lapply(X = X, FUN = FUN, ...) 4. sobir (local) FUN(X[[i]], ...) 5. sobir::calc_area(sim_x, sim_y)      at sobir/R/perm_area.R:83:4 6. DescTools::AUC(topl_crnr$x, topl_crnr$y, absolutearea = TRUE)      at sobir/R/calc_area.R:138:2 7. stats::approx(...) 8. stats:::regularize.values(x, y, ties, missing(ties), na.rm = na.rm)Error (tests.R:40): perm_area should calculate the no-data zone areas for each permutation of the data simulated nsim timesError in `UseMethod("rescale")`: no applicable method for 'rescale' applied to an object of class "list"Backtrace: 1. sobir::perm_area(a, b, 5, boundary = "topl")      at tests.R:40:2 3. scales::rescale(dat_perm$val[which(dat_perm$polygon == "botl")])────────────────────────────────────────────────────────────────────────────✖ | 1 9     0 | perm_plot [0.3s]                                            ────────────────────────────────────────────────────────────────────────────Warning (tests.R:51): perm_plot should pull the appropriate data from the perm_area analysiscollapsing to unique 'x' valuesBacktrace: 1. sobir::perm_area(a, b, 5, boundary = "topl")      at tests.R:51:2 2. base::sapply(...)      at sobir/R/perm_area.R:74:2 3. base::lapply(X = X, FUN = FUN, ...) 4. sobir (local) FUN(X[[i]], ...) 5. sobir::calc_area(sim_x, sim_y)      at sobir/R/perm_area.R:83:4 6. DescTools::AUC(topr_crnr$x, topr_crnr$y, absolutearea = TRUE)      at sobir/R/calc_area.R:128:2 7. stats::approx(...) 8. stats:::regularize.values(x, y, ties, missing(ties), na.rm = na.rm)Warning (tests.R:51): perm_plot should pull the appropriate data from the perm_area analysiscollapsing to unique 'x' valuesBacktrace: 1. sobir::perm_area(a, b, 5, boundary = "topl")      at tests.R:51:2 2. base::sapply(...)      at sobir/R/perm_area.R:74:2 3. base::lapply(X = X, FUN = FUN, ...) 4. sobir (local) FUN(X[[i]], ...) 5. sobir::calc_area(sim_x, sim_y)      at sobir/R/perm_area.R:83:4 6. DescTools::AUC(topl_crnr$x, topl_crnr$y, absolutearea = TRUE)      at sobir/R/calc_area.R:138:2 7. stats::approx(...) 8. stats:::regularize.values(x, y, ties, missing(ties), na.rm = na.rm)Warning (tests.R:51): perm_plot should pull the appropriate data from the perm_area analysiscollapsing to unique 'x' valuesBacktrace: 1. sobir::perm_area(a, b, 5, boundary = "topl")      at tests.R:51:2 2. base::sapply(...)      at sobir/R/perm_area.R:74:2 3. base::lapply(X = X, FUN = FUN, ...) 4. sobir (local) FUN(X[[i]], ...) 5. sobir::calc_area(sim_x, sim_y)      at sobir/R/perm_area.R:83:4 6. DescTools::AUC(topr_crnr$x, topr_crnr$y, absolutearea = TRUE)      at sobir/R/calc_area.R:128:2 7. stats::approx(...) 8. stats:::regularize.values(x, y, ties, missing(ties), na.rm = na.rm)Warning (tests.R:51): perm_plot should pull the appropriate data from the perm_area analysiscollapsing to unique 'x' valuesBacktrace: 1. sobir::perm_area(a, b, 5, boundary = "topl")      at tests.R:51:2 2. base::sapply(...)      at sobir/R/perm_area.R:74:2 3. base::lapply(X = X, FUN = FUN, ...) 4. sobir (local) FUN(X[[i]], ...) 5. sobir::calc_area(sim_x, sim_y)      at sobir/R/perm_area.R:83:4 6. DescTools::AUC(topr_crnr$x, topr_crnr$y, absolutearea = TRUE)      at sobir/R/calc_area.R:128:2 7. stats::approx(...) 8. stats:::regularize.values(x, y, ties, missing(ties), na.rm = na.rm)Warning (tests.R:51): perm_plot should pull the appropriate data from the perm_area analysiscollapsing to unique 'x' valuesBacktrace: 1. sobir::perm_area(a, b, 5, boundary = "topl")      at tests.R:51:2 2. base::sapply(...)      at sobir/R/perm_area.R:74:2 3. base::lapply(X = X, FUN = FUN, ...) 4. sobir (local) FUN(X[[i]], ...) 5. sobir::calc_area(sim_x, sim_y)      at sobir/R/perm_area.R:83:4 6. DescTools::AUC(topl_crnr$x, topl_crnr$y, absolutearea = TRUE)      at sobir/R/calc_area.R:138:2 7. stats::approx(...) 8. stats:::regularize.values(x, y, ties, missing(ties), na.rm = na.rm)Warning (tests.R:51): perm_plot should pull the appropriate data from the perm_area analysiscollapsing to unique 'x' valuesBacktrace: 1. sobir::perm_area(a, b, 5, boundary = "topl")      at tests.R:51:2 2. base::sapply(...)      at sobir/R/perm_area.R:74:2 3. base::lapply(X = X, FUN = FUN, ...) 4. sobir (local) FUN(X[[i]], ...) 5. sobir::calc_area(sim_x, sim_y)      at sobir/R/perm_area.R:83:4 6. DescTools::AUC(topr_crnr$x, topr_crnr$y, absolutearea = TRUE)      at sobir/R/calc_area.R:128:2 7. stats::approx(...) 8. stats:::regularize.values(x, y, ties, missing(ties), na.rm = na.rm)Warning (tests.R:51): perm_plot should pull the appropriate data from the perm_area analysiscollapsing to unique 'x' valuesBacktrace: 1. sobir::perm_area(a, b, 5, boundary = "topl")      at tests.R:51:2 2. base::sapply(...)      at sobir/R/perm_area.R:74:2 3. base::lapply(X = X, FUN = FUN, ...) 4. sobir (local) FUN(X[[i]], ...) 5. sobir::calc_area(sim_x, sim_y)      at sobir/R/perm_area.R:83:4 6. DescTools::AUC(topl_crnr$x, topl_crnr$y, absolutearea = TRUE)      at sobir/R/calc_area.R:138:2 7. stats::approx(...) 8. stats:::regularize.values(x, y, ties, missing(ties), na.rm = na.rm)Warning (tests.R:51): perm_plot should pull the appropriate data from the perm_area analysiscollapsing to unique 'x' valuesBacktrace: 1. sobir::perm_area(a, b, 5, boundary = "topl")      at tests.R:51:2 2. base::sapply(...)      at sobir/R/perm_area.R:74:2 3. base::lapply(X = X, FUN = FUN, ...) 4. sobir (local) FUN(X[[i]], ...) 5. sobir::calc_area(sim_x, sim_y)      at sobir/R/perm_area.R:83:4 6. DescTools::AUC(topr_crnr$x, topr_crnr$y, absolutearea = TRUE)      at sobir/R/calc_area.R:128:2 7. stats::approx(...) 8. stats:::regularize.values(x, y, ties, missing(ties), na.rm = na.rm)Warning (tests.R:51): perm_plot should pull the appropriate data from the perm_area analysiscollapsing to unique 'x' valuesBacktrace: 1. sobir::perm_area(a, b, 5, boundary = "topl")      at tests.R:51:2 2. base::sapply(...)      at sobir/R/perm_area.R:74:2 3. base::lapply(X = X, FUN = FUN, ...) 4. sobir (local) FUN(X[[i]], ...) 5. sobir::calc_area(sim_x, sim_y)      at sobir/R/perm_area.R:83:4 6. DescTools::AUC(topl_crnr$x, topl_crnr$y, absolutearea = TRUE)      at sobir/R/calc_area.R:138:2 7. stats::approx(...) 8. stats:::regularize.values(x, y, ties, missing(ties), na.rm = na.rm)Error (tests.R:51): perm_plot should pull the appropriate data from the perm_area analysisError in `UseMethod("rescale")`: no applicable method for 'rescale' applied to an object of class "list"Backtrace: 1. sobir::perm_area(a, b, 5, boundary = "topl")      at tests.R:51:2 3. scales::rescale(dat_perm$val[which(dat_perm$polygon == "botl")])      at sobir/R/perm_area.R:112:2────────────────────────────────────────────────────────────────────────────══ Results ═════════════════════════════════════════════════════════════════Duration: 1.1 s[ FAIL 2 | WARN 20 | SKIP 0 | PASS 4 ]